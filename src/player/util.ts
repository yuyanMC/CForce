import AES from 'crypto-js/aes';
import Utf8 from 'crypto-js/enc-utf8';

const key="Hell and Unique Encrypt Key Generated by keyboard. Well I think this is enough safe and it shouldn't be cracked. If you found this key, do not share it.";

function calculateAngle(cx: number, cy: number, ax: number, ay: number) {
    if (ay == cy) {
        return Math.PI;
    }
    if (ay < cy) {
        return Math.PI / 2 - Math.atan((ax - cx) / (ay - cy)) + Math.PI;
    }
    return Math.PI / 2 - Math.atan((ax - cx) / (ay - cy));
}
function _getQueryString(name: string) {
    let reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
    let r = window.location.search.substr(1).match(reg);
    if (r != null) {
        return decodeURIComponent(r[2]);
    }
    return null;
}
function getQueryString(name: string) {
    let decrypt:{[k:string]:any}=JSON.parse(AES.decrypt(_getQueryString("e"),key).toString(Utf8));
    return decrypt[name];
}
function setQueryString(obj: {[k:string]:any}){
    return `?e=${encodeURIComponent(AES.encrypt(JSON.stringify(obj),key).toString())}`;
}

async function sleep(ms:number){
    return new Promise<void>((resolve)=>{setTimeout(()=>{resolve()},ms)});
}

export {calculateAngle,getQueryString,setQueryString,sleep};